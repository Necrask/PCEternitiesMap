<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ToolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="CHKInfinite.ToolTip" xml:space="preserve">
    <value>Check this box to Play Finite Mode. Leave unchecked
to play Standard Blind Eternities Map.

In the standard version of the Blind Eternities Map,
as planes become no longer visable on the board,
they are reshuffled back into the deck, and new planes
are dealt out when new planes are discovered.

In Finite Mode, Planes are not reshuffled back into the
deck when they are no longer visable on the board,
remaining on the grid to be visited again. Once the Deck
is out of cards, Helljumping is disabled. After that, you 
won't be able to Planeswalk to "unknown" Planes.
  
Finite mode allows for unique maps of the Multiverse
every playthrough.</value>
  </data>
  <data name="ChkAertReset.ToolTip" xml:space="preserve">
    <value>Check this box to have Aretopolis reset when its ability
triggers. This Setting will only affect Aretopolis's ability.

When Aretopolis's ability triggers, and it does not reset,
it will keep its counters (subject to other settings conditions).
when you travel back to Aretopolis, you will put a Scroll counter on
Aretopolis, gain life, and then immediately Planeswalk away again.

The Max No of counters the program allows is currently 99.</value>
  </data>
  <data name="ChkNaarReset.ToolTip" xml:space="preserve">
    <value>Check this box to have ONLY Naar Isle 
reset its counters when Planeswalking away.

Naar Isle says:
At the beginning of your upkeep,
put a flame counter on Naar Isle,
then Naar Isle deals damage to you 
equal to the number of flame counters on it.

</value>
  </data>
  <data name="ChkDistanceReset.ToolTip" xml:space="preserve">
    <value>Check this box to force reset the counters on any card
that is no longer visable on the board.
In Standard Mode, this allows planes to have counters as long
as they are on the board.
In Finite Mode, planes will still remain in the same configuration,
but will still lose counters as they leave the board, like in Standard.

This primarily affects:

Aerotopolis (Scroll Counters)
Kilnspire District (Charge Counters)
Mount Keralia (Pressure Counters)
Naar Isle (Flame Counters)

but will also affect any Plane that gets a counter of any kind.
This affects all card sets.</value>
  </data>
  <data name="ChkResetReturn.ToolTip" xml:space="preserve">
    <value>Uncheck this box to skip reset of the counters on any card
that is returned to the deck.
In Standard Mode, this allows planes to have persistant
counters when a Plane is redealt from the deck.
In Finite Mode, planes will have persistant counters throught 
the game.

This primarily affects:

Aerotopolis (Scroll Counters)
Kilnspire District (Charge Counters)
Mount Keralia (Pressure Counters)
Naar Isle (Flame Counters)

but will also affect any Plane that gets a counter of any kind.
This affects all card sets.</value>
  </data>
  <data name="ChkPreTransReset.ToolTip" xml:space="preserve">
    <value>Check this box to force reset the counters on the active plane
when leaving.

This primarily affects:

Aerotopolis (Scroll Counters)
Kilnspire District (Charge Counters)
Mount Keralia (Pressure Counters)
Naar Isle (Flame Counters)

but will also affect any Plane that gets a counter of any kind.
This affects all card sets.
</value>
  </data>
  <data name="RTBCredits.Text" xml:space="preserve">
    <value>Magic: The Gathering, MTG, and Planechase are Copyright Wizard of The Coast LLC
All Rights to Cards, Art, and Assets Reserved by Original Owners
This program is unofficial and is in no way endorsed by Wizards of The Coast LLC
This software and its code are distributed and licensed GNU GPL v3


Geekchase created by u/TGIFman
Geekchase: https://www.reddit.com/r/magicTCG/comments/1h4yp5/geekchase_a_set_of_30_custom_planechase_cards/


Ixalan Expansion created by Mareykan
Ixalan Expansion: https://www.mtgsalvation.com/forums/magic-fundamentals/custom-card-creation/791117-i-made-planechase-cards-for-ixalan


Multiverse - The Custom Planechase Expansion created by u/Magical Hacker
Multiverse - The Custom Planechase Expansion: https://www.reddit.com/r/custommagic/comments/7sgecl/multiverse_the_custom_planechase_expansion/?utm_medium=android_app&amp;utm_source=share


Planechase 2017 created by Wapulatus
Planechase 2017: http://magicseteditor.sourceforge.net/node/14469


Planechase 2019 created by u/ExPointReddit
Planechase 2019: https://www.reddit.com/r/magicTCG/comments/9127qi/after_over_a_year_of_work_we_give_you_what/?ref=share&amp;ref_source=link


</value>
  </data>
  <data name="RTBResources.Text" xml:space="preserve">
    <value>Our Github:

https://github.com/usulrasolas/PCEternitiesMap

Planeschase Rules:

https://magic.wizards.com/en/articles/archive/feature/rules-revealed-2009-08-10
and
https://mtg.fandom.com/wiki/Planechase_(format)

Blind Eternites Variant Rules:

https://magic.wizards.com/en/articles/archive/feature/eternities-map-2010-07-19-0

</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP///wEAAAAAAAAAAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8AAAAAAAAA
        AAD///8BAAAAAAAAAAAAAAAAz8/Q+////3wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /4XQ0NH3AAAAAAAAAAAAAAAA////EIGBg/98e37/////YAAAAAD///8AAAAAAAAAAAD///8AAAAAAP//
        /2xzc3X/h4eJ/////wgAAAAAAAAAAAAAAADIyMjsExIW/2NiZf/o6OfK////Yf///zH///8y////ZuDg
        4dNZWFv/ExIW/87OzuYAAAAAAAAAAM7OzuPv7/Cm////U2VkZv8gHyP/FRQY/0A/Q/9mZmj/ZWVn/zw8
        P/8WFBj/IB8j/2xrbf////9I5+jot9LS09eIiIr/rq6v/wAAAADn5+fKFhUZ/xsaHv8gHyP/IB8j/yAf
        I/8gHyP/Gxoe/xUUGP/u7+7DAAAAAKKio/+VlJb/m5uc+zQyNv////+Iubm65SsqLv+/v8D8kpKU/yIh
        Jf8lJCj/k5OU/769vvwoJyv/vr2/2////6ApKCv/paSl9dLS0sgVFBn/ZmVo/9nZ2f////+aAAAAAP//
        /yl+fX//hYSG/////yEAAAAA/v7+oNjY2P9SUVP/FRQY/9/f37z///9vPDs+/x4dIf9MSk7/3t7e1P//
        /1r///8Ezs7Py9XV1cP///8L////ZNDQ0OM7Oj7/IB8j/0dGSf////9jAAAAAMLCwvkXFhr/IB8j/xYU
        GP9LSk3/iYmL/6Cgov+gn6H/hoWH/0JBRP8XFhr/IB8j/xYVGv/Ly8vyAAAAAAAAAAD///8+j46Q/xgX
        HP8gHyP/IB8j/yAfI/8eHSL/Hx4i/yAfI/8gHyP/IB8j/xgXG/+YmJr/////NP///wAAAAAAAAAAAP//
        /0eysbL/JSQo/xsaHv8gHyP/IB8j/yAfI/8gHyP/Ghkd/ygnK/+3t7n/////PwAAAAAAAAAAAAAAAAAA
        AAAAAAAA////Cv///5C7urzxjY2O/3NydP9zcnX/jo6Q/728ve////+M////BwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP///wAAAAAAAAAAAP///wn///8j////I////wgAAAAAAAAAAP///wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAP//AADf8wAAz/MAAMPDAAAgBAAAIAQAAAAAAAAGYAAAhmEAAIABAADAAwAA4AcAAPAP
        AAD//wAA//8AAA==
</value>
  </data>
</root>